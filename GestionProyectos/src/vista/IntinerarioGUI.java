/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import dao.ReservaDAO;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import modelo.Reserva;
import java.io.IOException;
import java.time.LocalDateTime;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.List;
/**
 *
 * @author jh599
 */
public class IntinerarioGUI extends javax.swing.JFrame {
private int idUsuario;
private String nombreUsuario;
private ReservaDAO reservaDAO;
private DefaultTableModel modeloReservas;
private final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

// Nuevo constructor
public IntinerarioGUI(int idUsuario, String nombreUsuario) {
    this.idUsuario = idUsuario;
    this.nombreUsuario = nombreUsuario;
    this.reservaDAO = new ReservaDAO();

    initComponents(); // Inicializa el GUI Builder

    // Configura la ventana
    setTitle("üß≥ Mi Itinerario - " + nombreUsuario);
    
    // Conecta el modelo de la tabla
    modeloReservas = (DefaultTableModel) jTable1.getModel();
    
    // Carga las reservas
    cargarReservas();
      setLocationRelativeTo(null);
}
  


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCancelarReserva = new javax.swing.JButton();
        btnExportarPDF = new javax.swing.JButton();
        btnVolverVuelosGUI = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Vuelo", "Ruta", "Salida", "Asientos", "Precio total", "Fecha reserva"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnCancelarReserva.setText("Cancelar reserva");
        btnCancelarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarReservaActionPerformed(evt);
            }
        });

        btnExportarPDF.setText("Exportar a PDF");
        btnExportarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarPDFActionPerformed(evt);
            }
        });

        btnVolverVuelosGUI.setText("Volver ");
        btnVolverVuelosGUI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverVuelosGUIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(btnCancelarReserva)
                        .addGap(48, 48, 48)
                        .addComponent(btnVolverVuelosGUI)
                        .addGap(46, 46, 46)
                        .addComponent(btnExportarPDF)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarReserva)
                    .addComponent(btnExportarPDF)
                    .addComponent(btnVolverVuelosGUI))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverVuelosGUIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverVuelosGUIActionPerformed
       // Vuelve a VuelosGUI
    new VuelosGUI(idUsuario, nombreUsuario).setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btnVolverVuelosGUIActionPerformed

    private void btnCancelarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarReservaActionPerformed
         int fila = jTable1.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "‚ö†Ô∏è Seleccione una reserva.");
        return;
    }

    int idReserva = (int) jTable1.getValueAt(fila, 0);
    int confirm = JOptionPane.showConfirmDialog(this, "¬øCancelar reserva?");
    if (confirm == JOptionPane.YES_OPTION) {
        if (reservaDAO.cancelarReserva(idReserva)) {
            JOptionPane.showMessageDialog(this, "‚úÖ Cancelada.");
            cargarReservas();
        }
    }
    }//GEN-LAST:event_btnCancelarReservaActionPerformed

    private void btnExportarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarPDFActionPerformed
       exportarItinerarioAPDF();
    }//GEN-LAST:event_btnExportarPDFActionPerformed

    /**
     * @param args the command line arguments
     */
   private void cargarReservas() {
    modeloReservas.setRowCount(0); // Limpia la tabla
    List<Reserva> reservas = reservaDAO.obtenerReservasPorUsuario(idUsuario);

    for (Reserva r : reservas) {
        double precioTotal = r.getVuelo().getPrecio() * r.getCantidadAsientos();
        modeloReservas.addRow(new Object[]{
            r.getIdReserva(),
            r.getVuelo().getNumeroVuelo(),
            r.getVuelo().getOrigen() + " ‚Üí " + r.getVuelo().getDestino(),
            r.getVuelo().getFechaSalida().format(formatter),
            r.getCantidadAsientos(),
            String.format("%.2f", precioTotal),
            r.getFechaReserva().format(formatter)
        });
    }
}
    private void exportarItinerarioAPDF() {
    // Obtener reservas del usuario
    List<Reserva> reservas = reservaDAO.obtenerReservasPorUsuario(idUsuario);
    if (reservas.isEmpty()) {
        JOptionPane.showMessageDialog(this, "‚ùå No tienes reservas para exportar.");
        return;
    }
    
    // Seleccionar ubicaci√≥n del archivo
    JFileChooser chooser = new JFileChooser();
    chooser.setDialogTitle("Guardar itinerario como PDF");
    chooser.setSelectedFile(new java.io.File("Itinerario_" + idUsuario + ".pdf"));
    int result = chooser.showSaveDialog(this);
    if (result != JFileChooser.APPROVE_OPTION) {
        return; // Cancelado
    }
    
    java.io.File archivo = chooser.getSelectedFile();
    if (!archivo.getName().toLowerCase().endsWith(".pdf")) {
        archivo = new java.io.File(archivo.getPath() + ".pdf");
    }
    
    try {
        // Crear documento PDF con OpenPDF
        com.lowagie.text.Document document = new com.lowagie.text.Document();
        com.lowagie.text.pdf.PdfWriter.getInstance(document, new java.io.FileOutputStream(archivo));
        document.open();
        
        // Definir fuentes
        com.lowagie.text.Font titleFont = new com.lowagie.text.Font(com.lowagie.text.Font.HELVETICA, 18, com.lowagie.text.Font.BOLD);
        com.lowagie.text.Font headerFont = new com.lowagie.text.Font(com.lowagie.text.Font.HELVETICA, 12, com.lowagie.text.Font.BOLD);
        com.lowagie.text.Font normalFont = new com.lowagie.text.Font(com.lowagie.text.Font.HELVETICA, 10, com.lowagie.text.Font.NORMAL);
        com.lowagie.text.Font smallFont = new com.lowagie.text.Font(com.lowagie.text.Font.HELVETICA, 9, com.lowagie.text.Font.NORMAL);
        
        // T√≠tulo principal
        com.lowagie.text.Paragraph title = new com.lowagie.text.Paragraph("ITINERARIO DE VUELOS", titleFont);
        title.setAlignment(com.lowagie.text.Element.ALIGN_CENTER);
        title.setSpacingAfter(20);
        document.add(title);
        
        // Informaci√≥n del usuario - usando p√°rrafos separados
        com.lowagie.text.Paragraph userIdPara = new com.lowagie.text.Paragraph();
        userIdPara.add(new com.lowagie.text.Chunk("Usuario ID: ", headerFont));
        userIdPara.add(new com.lowagie.text.Chunk(String.valueOf(idUsuario), normalFont));
        document.add(userIdPara);
        
        com.lowagie.text.Paragraph datePara = new com.lowagie.text.Paragraph();
        datePara.add(new com.lowagie.text.Chunk("Fecha de generaci√≥n: ", headerFont));
        datePara.add(new com.lowagie.text.Chunk(java.time.LocalDateTime.now().format(formatter), normalFont));
        datePara.setSpacingAfter(20);
        document.add(datePara);
        
        // Crear tabla con 6 columnas
        com.lowagie.text.pdf.PdfPTable table = new com.lowagie.text.pdf.PdfPTable(6);
        table.setWidthPercentage(100);
        
        // Establecer anchos relativos de columnas
        float[] columnWidths = {15f, 25f, 20f, 10f, 15f, 15f};
        table.setWidths(columnWidths);
        
        // Color de fondo para encabezados
        java.awt.Color headerColor = new java.awt.Color(230, 230, 230);
        
        // Agregar encabezados de tabla
        String[] headers = {"Vuelo", "Ruta", "Salida", "Asientos", "Precio Total", "Estado"};
        for (String header : headers) {
            com.lowagie.text.pdf.PdfPCell headerCell = new com.lowagie.text.pdf.PdfPCell(
                new com.lowagie.text.Phrase(header, headerFont));
            headerCell.setBackgroundColor(headerColor);
            headerCell.setHorizontalAlignment(com.lowagie.text.Element.ALIGN_CENTER);
            headerCell.setVerticalAlignment(com.lowagie.text.Element.ALIGN_MIDDLE);
            headerCell.setPadding(8);
            headerCell.setBorderWidth(1);
            table.addCell(headerCell);
        }
        
        // Agregar datos de las reservas
        double totalGeneral = 0;
        for (Reserva reserva : reservas) {
            double precioTotal = reserva.getVuelo().getPrecio() * reserva.getCantidadAsientos();
            totalGeneral += precioTotal;
            String ruta = reserva.getVuelo().getOrigen() + " ‚Üí " + reserva.getVuelo().getDestino();
            String salida = reserva.getVuelo().getFechaSalida().format(formatter);
            
            // Celda Vuelo
            com.lowagie.text.pdf.PdfPCell cellVuelo = new com.lowagie.text.pdf.PdfPCell(
                new com.lowagie.text.Phrase(reserva.getVuelo().getNumeroVuelo(), normalFont));
            cellVuelo.setPadding(5);
            table.addCell(cellVuelo);
            
            // Celda Ruta
            com.lowagie.text.pdf.PdfPCell cellRuta = new com.lowagie.text.pdf.PdfPCell(
                new com.lowagie.text.Phrase(ruta, smallFont));
            cellRuta.setPadding(5);
            table.addCell(cellRuta);
            
            // Celda Salida
            com.lowagie.text.pdf.PdfPCell cellSalida = new com.lowagie.text.pdf.PdfPCell(
                new com.lowagie.text.Phrase(salida, smallFont));
            cellSalida.setPadding(5);
            table.addCell(cellSalida);
            
            // Celda Asientos (centrado)
            com.lowagie.text.pdf.PdfPCell cellAsientos = new com.lowagie.text.pdf.PdfPCell(
                new com.lowagie.text.Phrase(String.valueOf(reserva.getCantidadAsientos()), normalFont));
            cellAsientos.setHorizontalAlignment(com.lowagie.text.Element.ALIGN_CENTER);
            cellAsientos.setPadding(5);
            table.addCell(cellAsientos);
            
            // Celda Precio (alineado a la derecha)
            com.lowagie.text.pdf.PdfPCell cellPrecio = new com.lowagie.text.pdf.PdfPCell(
                new com.lowagie.text.Phrase("$" + String.format("%.2f", precioTotal), normalFont));
            cellPrecio.setHorizontalAlignment(com.lowagie.text.Element.ALIGN_RIGHT);
            cellPrecio.setPadding(5);
            table.addCell(cellPrecio);
            
            // Celda Estado (centrado)
            com.lowagie.text.pdf.PdfPCell cellEstado = new com.lowagie.text.pdf.PdfPCell(
                new com.lowagie.text.Phrase(reserva.getEstado(), normalFont));
            cellEstado.setHorizontalAlignment(com.lowagie.text.Element.ALIGN_CENTER);
            cellEstado.setPadding(5);
            table.addCell(cellEstado);
        }
        
        // Agregar tabla al documento
        document.add(table);
        
        // Agregar resumen al final - usando p√°rrafos separados
        com.lowagie.text.Paragraph espaciado = new com.lowagie.text.Paragraph(" ");
        espaciado.setSpacingBefore(20);
        document.add(espaciado);
        
        com.lowagie.text.Paragraph tituloResumen = new com.lowagie.text.Paragraph("RESUMEN", headerFont);
        tituloResumen.setAlignment(com.lowagie.text.Element.ALIGN_RIGHT);
        document.add(tituloResumen);
        
        com.lowagie.text.Paragraph totalReservas = new com.lowagie.text.Paragraph();
        totalReservas.add(new com.lowagie.text.Chunk("Total de reservas: ", normalFont));
        totalReservas.add(new com.lowagie.text.Chunk(String.valueOf(reservas.size()), headerFont));
        totalReservas.setAlignment(com.lowagie.text.Element.ALIGN_RIGHT);
        document.add(totalReservas);
        
        com.lowagie.text.Paragraph montoTotal = new com.lowagie.text.Paragraph();
        montoTotal.add(new com.lowagie.text.Chunk("Monto total: ", normalFont));
        montoTotal.add(new com.lowagie.text.Chunk("$" + String.format("%.2f", totalGeneral), headerFont));
        montoTotal.setAlignment(com.lowagie.text.Element.ALIGN_RIGHT);
        document.add(montoTotal);
        
        // Cerrar documento
        document.close();
        
        JOptionPane.showMessageDialog(this, "‚úÖ Itinerario exportado exitosamente como PDF:\n" + archivo.getAbsolutePath());
        
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "‚ùå Error al generar el PDF:\n" + e.getMessage());
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarReserva;
    private javax.swing.JButton btnExportarPDF;
    private javax.swing.JButton btnVolverVuelosGUI;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
